<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://postgetme.github.io/feed" rel="self"/>
  <link href="http://postgetme.github.io/"/>
  <updated>2013-08-01T00:20:07+08:00</updated>
  <id>http://postgetme.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[my first article]]></title>
    <link href="http://postgetme.github.io/blog/2013/07/31/my-first-article/"/>
    <updated>2013-07-31T23:31:00+08:00</updated>
    <id>http://postgetme.github.io/blog/2013/07/31/my-first-article</id>
    <content type="html"><![CDATA[<h1>RTL</h1>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/38%E8%AF%91%E7%A0%81%E5%99%A8%E7%9A%84%E5%87%A0%E7%A7%8D%E5%86%99%E6%B3%95/decoder38_1.png" alt="RTL" /></p>

<h1>Verilog</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module decoder38 (i_sel, i_opt, o_y);
</span><span class='line'>    input [2:0] i_sel;
</span><span class='line'>    input i_opt;
</span><span class='line'>    output reg [7:0] o_y;
</span><span class='line'>    reg [7:0] r_y;
</span><span class='line'>
</span><span class='line'>    always @ (i_sel or i_opt)
</span><span class='line'>        begin
</span><span class='line'>            case (i_sel)
</span><span class='line'>                3'd0: r_y = 8'b1111_1110;   //十进制表示法，二进制数可以用'_'分隔
</span><span class='line'>                3'd1: r_y = 8'b1111_1101;
</span><span class='line'>                3'd2: r_y = 8'b1111_1011;
</span><span class='line'>                3'd3: r_y = 8'b1111_0111;
</span><span class='line'>                3'd4: r_y = 8'b1110_1111;
</span><span class='line'>                3'd5: r_y = 8'b1101_1111;
</span><span class='line'>                3'd6: r_y = 8'b1011_1111;
</span><span class='line'>                3'd7: r_y = 8'b0111_1111;
</span><span class='line'>                default: r_y = 8'hff;   //十六进制表示法
</span><span class='line'>            endcase
</span><span class='line'>        
</span><span class='line'>            if (i_opt == 1)
</span><span class='line'>                o_y = ~r_y;
</span><span class='line'>            else
</span><span class='line'>                o_y = r_y;
</span><span class='line'>        end
</span><span class='line'>endmodule</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>

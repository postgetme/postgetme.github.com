<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[postget]]></title>
  <link href="http://postgetme.github.io/feed" rel="self"/>
  <link href="http://postgetme.github.io/"/>
  <updated>2013-08-18T17:30:57+08:00</updated>
  <id>http://postgetme.github.io/</id>
  <author>
    <name><![CDATA[MeiLin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[分频器总结]]></title>
    <link href="http://postgetme.github.io/blog/2013/08/11/divider/"/>
    <updated>2013-08-11T15:17:00+08:00</updated>
    <id>http://postgetme.github.io/blog/2013/08/11/divider</id>
    <content type="html"><![CDATA[<ol>
<li><a href="#divider_1">D触发器2分频</a></li>
<li><a href="#divider_2">计数器2分频</a></li>
<li><a href="#divider_3">D触发器4分频</a></li>
<li><a href="#divider_4">计数器4分频</a></li>
<li><a href="#divider_5">计数器6分频写法1</a></li>
<li><a href="#divider_6">计数器6分频写法2</a></li>
<li><a href="#divider_7">非等占空比3分频</a></li>
<li><a href="#divider_8">等占空比3分频</a></li>
</ol>


<h2 id="divider_1">1.D触发器2分频</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (divider_1.v)</span> <a href='http://postgetme.github.io/downloads/code/divider/divider_1.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">divider_1</span> <span class="p">(</span><span class="n">i_clk</span><span class="p">,</span> <span class="n">i_rst_n</span><span class="p">,</span> <span class="n">o_div_clk</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_rst_n</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="kt">reg</span> <span class="n">o_div_clk</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="k">posedge</span> <span class="n">i_clk</span> <span class="k">or</span> <span class="k">negedge</span> <span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>                <span class="n">o_div_clk</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="n">o_div_clk</span> <span class="o">&lt;=</span> <span class="o">~</span><span class="n">o_div_clk</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_1_rtl.png" alt="image" /></p>

<h3>Simulation</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_1_simulation.png" alt="image" /></p>

<h2 id="divider_2">2.计数器2分频</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (divider_2.v)</span> <a href='http://postgetme.github.io/downloads/code/divider/divider_2.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">divider_2</span> <span class="p">(</span><span class="n">i_clk</span><span class="p">,</span> <span class="n">i_rst_n</span><span class="p">,</span> <span class="n">o_div_clk</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_rst_n</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="n">o_div_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="n">r_cnt</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="k">posedge</span> <span class="n">i_clk</span> <span class="k">or</span> <span class="k">negedge</span> <span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="n">r_cnt</span> <span class="o">+</span> <span class="mh">1&#39;b1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">assign</span> <span class="n">o_div_clk</span> <span class="o">=</span> <span class="n">r_cnt</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_2_rtl.png" alt="image" /></p>

<h3>Simulation</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_2_simulation.png" alt="image" /></p>

<h2 id="divider_3">3.D触发器4分频</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (divider_3.v)</span> <a href='http://postgetme.github.io/downloads/code/divider/divider_3.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">divider_3</span> <span class="p">(</span><span class="n">i_clk</span><span class="p">,</span> <span class="n">i_rst_n</span><span class="p">,</span> <span class="n">o_div_clk</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_rst_n</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="kt">reg</span> <span class="n">o_div_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="n">r_temp_clk</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="k">posedge</span> <span class="n">i_clk</span> <span class="k">or</span> <span class="k">negedge</span> <span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>                <span class="k">begin</span>
</span><span class='line'>                    <span class="n">o_div_clk</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>                    <span class="n">r_temp_clk</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>                <span class="k">end</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="k">begin</span>
</span><span class='line'>                    <span class="n">o_div_clk</span> <span class="o">&lt;=</span> <span class="n">r_temp_clk</span><span class="p">;</span>
</span><span class='line'>                    <span class="n">r_temp_clk</span> <span class="o">&lt;=</span> <span class="o">~</span><span class="n">o_div_clk</span><span class="p">;</span>
</span><span class='line'>                <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_3_rtl.png" alt="image" /></p>

<h3>Simulation</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_3_simulation.png" alt="image" /></p>

<h2 id="divider_4">4.计数器4分频</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (divider_4.v)</span> <a href='http://postgetme.github.io/downloads/code/divider/divider_4.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">divider_4</span> <span class="p">(</span><span class="n">i_clk</span><span class="p">,</span> <span class="n">i_rst_n</span><span class="p">,</span> <span class="n">o_div_clk</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_rst_n</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="n">o_div_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="p">[</span><span class="mh">1</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">r_cnt</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="k">posedge</span> <span class="n">i_clk</span> <span class="k">or</span> <span class="k">negedge</span> <span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="n">r_cnt</span> <span class="o">+</span> <span class="mh">1&#39;b1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">assign</span> <span class="n">o_div_clk</span> <span class="o">=</span> <span class="n">r_cnt</span><span class="p">[</span><span class="mh">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_4_rtl.png" alt="image" /></p>

<h3>Simulation</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_4_simulation.png" alt="image" /></p>

<h2 id="divider_5">5.计数器6分频写法1</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (divider_5.v)</span> <a href='http://postgetme.github.io/downloads/code/divider/divider_5.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">divider_5</span> <span class="p">(</span><span class="n">i_clk</span><span class="p">,</span> <span class="n">i_rst_n</span><span class="p">,</span> <span class="n">o_div_clk</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_rst_n</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="kt">reg</span> <span class="n">o_div_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="p">[</span><span class="mh">1</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">r_cnt</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="k">posedge</span> <span class="n">i_clk</span> <span class="k">or</span> <span class="k">negedge</span> <span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>                <span class="k">begin</span>
</span><span class='line'>                    <span class="n">o_div_clk</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>                    <span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>                <span class="k">end</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="k">begin</span>
</span><span class='line'>                    <span class="k">if</span> <span class="p">(</span><span class="n">r_cnt</span> <span class="o">&lt;</span> <span class="mh">2</span><span class="p">)</span>
</span><span class='line'>                        <span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="n">r_cnt</span> <span class="o">+</span> <span class="mh">1&#39;b1</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">else</span>
</span><span class='line'>                        <span class="k">begin</span>
</span><span class='line'>                            <span class="n">o_div_clk</span> <span class="o">&lt;=</span> <span class="o">~</span><span class="n">o_div_clk</span><span class="p">;</span>
</span><span class='line'>                            <span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>                        <span class="k">end</span>
</span><span class='line'>                <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_5_rtl.png" alt="image" /></p>

<h3>Simulation</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_5_simulation.png" alt="image" /></p>

<h2 id="divider_6">6.计数器6分频写法2</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (divider_6.v)</span> <a href='http://postgetme.github.io/downloads/code/divider/divider_6.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">divider_6</span> <span class="p">(</span><span class="n">i_clk</span><span class="p">,</span> <span class="n">i_rst_n</span><span class="p">,</span> <span class="n">o_div_clk</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_rst_n</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="kt">reg</span> <span class="n">o_div_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">r_cnt</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="k">posedge</span> <span class="n">i_clk</span> <span class="k">or</span> <span class="k">negedge</span> <span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">r_cnt</span> <span class="o">==</span> <span class="mh">5</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'>                    <span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="n">r_cnt</span> <span class="o">+</span> <span class="mh">1&#39;b1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="k">posedge</span> <span class="n">i_clk</span> <span class="k">or</span> <span class="k">negedge</span> <span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>                <span class="n">o_div_clk</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="mh">2</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">o_div_clk</span> <span class="o">&lt;=</span> <span class="mh">1</span><span class="p">;</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'>                    <span class="n">o_div_clk</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_6_rtl.png" alt="image" /></p>

<h3>Simulation</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_6_simulation.png" alt="image" /></p>

<h2 id="divider_7">7.非等占空比3分频</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (divider_7.v)</span> <a href='http://postgetme.github.io/downloads/code/divider/divider_7.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">divider_7</span> <span class="p">(</span><span class="n">i_clk</span><span class="p">,</span> <span class="n">i_rst_n</span><span class="p">,</span> <span class="n">o_div_clk</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_rst_n</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="kt">reg</span> <span class="n">o_div_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="p">[</span><span class="mh">1</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">r_cnt</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="k">posedge</span> <span class="n">i_clk</span> <span class="k">or</span> <span class="k">negedge</span> <span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">r_cnt</span> <span class="o">==</span> <span class="mh">2</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'>                    <span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="n">r_cnt</span> <span class="o">+</span> <span class="mh">1&#39;b1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="k">posedge</span> <span class="n">i_clk</span> <span class="k">or</span> <span class="k">negedge</span> <span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>                <span class="n">o_div_clk</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">r_cnt</span> <span class="o">&lt;=</span> <span class="mh">1</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">o_div_clk</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'>                    <span class="n">o_div_clk</span> <span class="o">&lt;=</span> <span class="mh">1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_7_rtl.png" alt="image" /></p>

<h3>Simulation</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_7_simulation.png" alt="image" /></p>

<h2 id="divider_8">8.等占空比3分频</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (divider_8.v)</span> <a href='http://postgetme.github.io/downloads/code/divider/divider_8.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">divider_8</span> <span class="p">(</span><span class="n">i_clk</span><span class="p">,</span> <span class="n">i_rst_n</span><span class="p">,</span> <span class="n">o_div_clk</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_rst_n</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="n">o_div_clk</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="p">[</span><span class="mh">1</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">r_cnt1</span><span class="p">,</span> <span class="n">r_cnt2</span><span class="p">;</span>   <span class="c1">//change registers width when K changed </span>
</span><span class='line'>    <span class="kt">reg</span> <span class="n">r_clk1</span><span class="p">,</span> <span class="n">r_clk2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//3=2K+1,K=1</span>
</span><span class='line'>    <span class="k">parameter</span> <span class="no">K</span> <span class="o">=</span> <span class="mh">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//posedge</span>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="k">posedge</span> <span class="n">i_clk</span> <span class="k">or</span> <span class="k">negedge</span> <span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>              <span class="n">r_cnt1</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">r_cnt1</span> <span class="o">==</span> <span class="mh">2</span> <span class="o">*</span> <span class="no">K</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">r_cnt1</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'>                    <span class="n">r_cnt1</span> <span class="o">&lt;=</span> <span class="n">r_cnt1</span> <span class="o">+</span> <span class="mh">1&#39;b1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="k">posedge</span> <span class="n">i_clk</span> <span class="k">or</span> <span class="k">negedge</span> <span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_clk1</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">r_cnt1</span> <span class="o">==</span> <span class="no">K</span> <span class="o">-</span> <span class="mh">1</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">r_clk1</span> <span class="o">&lt;=</span> <span class="mh">1</span><span class="p">;</span>
</span><span class='line'>                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">r_cnt1</span> <span class="o">==</span> <span class="mh">2</span> <span class="o">*</span> <span class="no">K</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">r_clk1</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//negedge</span>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="k">negedge</span> <span class="n">i_clk</span> <span class="k">or</span> <span class="k">negedge</span> <span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>              <span class="n">r_cnt2</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="n">r_cnt2</span> <span class="o">==</span> <span class="mh">2</span> <span class="o">*</span> <span class="no">K</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_cnt2</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>              <span class="k">else</span>
</span><span class='line'>                <span class="n">r_cnt2</span> <span class="o">&lt;=</span> <span class="n">r_cnt2</span> <span class="o">+</span> <span class="mh">1&#39;b1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="k">negedge</span> <span class="n">i_clk</span> <span class="k">or</span> <span class="k">negedge</span> <span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">i_rst_n</span><span class="p">)</span>
</span><span class='line'>              <span class="n">r_clk2</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">r_cnt2</span> <span class="o">==</span> <span class="no">K</span> <span class="o">-</span> <span class="mh">1</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">r_clk2</span> <span class="o">&lt;=</span> <span class="mh">1</span><span class="p">;</span>
</span><span class='line'>                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">r_cnt2</span> <span class="o">==</span> <span class="mh">2</span> <span class="o">*</span> <span class="no">K</span><span class="p">)</span>
</span><span class='line'>                    <span class="n">r_clk2</span> <span class="o">&lt;=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">assign</span> <span class="n">o_div_clk</span> <span class="o">=</span> <span class="n">r_clk1</span> <span class="o">&amp;</span> <span class="n">r_clk2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_8_rtl.png" alt="image" /></p>

<h3>Simulation</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/%E5%88%86%E9%A2%91%E5%99%A8/divider_8_simulation.png" alt="image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[38译码器的15种写法]]></title>
    <link href="http://postgetme.github.io/blog/2013/08/04/decoder38/"/>
    <updated>2013-08-04T21:30:00+08:00</updated>
    <id>http://postgetme.github.io/blog/2013/08/04/decoder38</id>
    <content type="html"><![CDATA[<ol>
<li><a href="#decoder38_1">标准写法</a></li>
<li><a href="#decoder38_2">两个always</a></li>
<li><a href="#decoder38_3">一个always搞定</a></li>
<li><a href="#decoder38_4">改成if else</a></li>
<li><a href="#decoder38_5">只用assign</a></li>
<li><a href="#decoder38_6">for循环1</a></li>
<li><a href="#decoder38_7">for循环2</a></li>
<li><a href="#decoder38_8">两行代码搞定</a></li>
<li><a href="#decoder38_9">一行代码搞定</a></li>
<li><a href="#decoder38_10">调用function</a></li>
<li><a href="#decoder38_11">调用task</a></li>
<li><a href="#decoder38_12">调用module</a></li>
<li><a href="#decoder38_13">原理图方式</a></li>
<li><a href="#decoder38_14">真值表描述</a></li>
<li><a href="#decoder38_15">门级描述</a></li>
</ol>


<h2 id="decoder38_1">1.标准写法</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (decoder38_1.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_1.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_1</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">i_opt</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_opt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">case</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">)</span>
</span><span class='line'>                <span class="mh">3&#39;b000</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b11111110</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3&#39;b001</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b11111101</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3&#39;b010</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b11111011</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3&#39;b011</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b11110111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3&#39;b100</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b11101111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3&#39;b101</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b11011111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3&#39;b110</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b10111111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3&#39;b111</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b01111111</span><span class="p">;</span>
</span><span class='line'>                <span class="k">default</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b11111111</span><span class="p">;</span>
</span><span class='line'>            <span class="k">endcase</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">assign</span> <span class="n">o_y</span> <span class="o">=</span> <span class="p">(</span><span class="n">i_opt</span> <span class="o">==</span> <span class="mh">1&#39;b1</span><span class="p">)</span> <span class="o">?</span> <span class="o">~</span><span class="n">r_y</span> <span class="o">:</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/38%E8%AF%91%E7%A0%81%E5%99%A8/decoder_1_rtl.png" alt="image" /></p>

<h3>Simulation</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/38%E8%AF%91%E7%A0%81%E5%99%A8/decoder_simulation.png" alt="image" /></p>

<h2 id="decoder38_2">2.两个always</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (decoder38_2.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_2.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_2</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">i_opt</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_opt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="n">i_sel</span> <span class="k">or</span> <span class="n">i_opt</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">case</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">)</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d0</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1110</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d1</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1101</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d2</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1011</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d3</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_0111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d4</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1110</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d5</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1101</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d6</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1011</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d7</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b0111</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="k">default</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;hff</span><span class="p">;</span>
</span><span class='line'>            <span class="k">endcase</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="n">i_opt</span> <span class="k">or</span> <span class="n">r_y</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">i_opt</span> <span class="o">==</span> <span class="mh">1&#39;b1</span><span class="p">)</span>
</span><span class='line'>                <span class="n">o_y</span> <span class="o">=</span> <span class="o">~</span><span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="n">o_y</span> <span class="o">=</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p>同上</p>

<h2 id="decoder38_3">3.一个always搞定</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (decoder38_3.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_3.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_3</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">i_opt</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_opt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="n">i_sel</span> <span class="k">or</span> <span class="n">i_opt</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">case</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">)</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d0</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1110</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d1</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1101</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d2</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1011</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d3</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_0111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d4</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1110</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d5</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1101</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d6</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1011</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d7</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b0111</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="k">default</span><span class="o">:</span> <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;hff</span><span class="p">;</span>
</span><span class='line'>            <span class="k">endcase</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">i_opt</span> <span class="o">==</span> <span class="mh">1&#39;b1</span><span class="p">)</span>
</span><span class='line'>                <span class="n">o_y</span> <span class="o">=</span> <span class="o">~</span><span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="n">o_y</span> <span class="o">=</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p>同上</p>

<h2 id="decoder38_4">4.改成if else</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (decoder38_4.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_4.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_4</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">i_opt</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_opt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="n">i_sel</span> <span class="k">or</span> <span class="n">i_opt</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d0</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1110</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d1</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1101</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d2</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1011</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d3</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_0111</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d4</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1110</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d5</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1101</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d6</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b1011</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d7</span><span class="p">)</span>
</span><span class='line'>                <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;b0111</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;hff</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">i_opt</span> <span class="o">==</span> <span class="mh">1&#39;b1</span><span class="p">)</span>
</span><span class='line'>                <span class="n">o_y</span> <span class="o">=</span> <span class="o">~</span><span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="n">o_y</span> <span class="o">=</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/38%E8%AF%91%E7%A0%81%E5%99%A8/decoder_4_rtl.png" alt="image" /></p>

<h2 id="decoder38_5">5.只用assign</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (decoder38_5.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_5.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_5</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">i_opt</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_opt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">wire</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">w_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">assign</span> <span class="n">w_y</span> <span class="o">=</span> <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d0</span><span class="p">)</span> <span class="o">?</span> <span class="mh">8&#39;b1111</span><span class="n">_1110</span> <span class="o">:</span>
</span><span class='line'>                 <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d1</span><span class="p">)</span> <span class="o">?</span> <span class="mh">8&#39;b1111</span><span class="n">_1101</span> <span class="o">:</span>
</span><span class='line'>                 <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d2</span><span class="p">)</span> <span class="o">?</span> <span class="mh">8&#39;b1111</span><span class="n">_1011</span> <span class="o">:</span>
</span><span class='line'>                 <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d3</span><span class="p">)</span> <span class="o">?</span> <span class="mh">8&#39;b1111</span><span class="n">_0111</span> <span class="o">:</span>
</span><span class='line'>                 <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d4</span><span class="p">)</span> <span class="o">?</span> <span class="mh">8&#39;b1110</span><span class="n">_1111</span> <span class="o">:</span>
</span><span class='line'>                 <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d5</span><span class="p">)</span> <span class="o">?</span> <span class="mh">8&#39;b1101</span><span class="n">_1111</span> <span class="o">:</span>
</span><span class='line'>                 <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d6</span><span class="p">)</span> <span class="o">?</span> <span class="mh">8&#39;b1011</span><span class="n">_1111</span> <span class="o">:</span>
</span><span class='line'>                 <span class="p">(</span><span class="n">i_sel</span> <span class="o">==</span> <span class="mh">3</span><span class="mi">&#39;d7</span><span class="p">)</span> <span class="o">?</span> <span class="mh">8&#39;b0111</span><span class="n">_1111</span> <span class="o">:</span>
</span><span class='line'>                 <span class="mh">8&#39;b1111</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">assign</span> <span class="n">o_y</span> <span class="o">=</span> <span class="p">(</span><span class="n">i_opt</span> <span class="o">==</span> <span class="mh">1&#39;b1</span><span class="p">)</span> <span class="o">?</span> <span class="o">~</span><span class="n">w_y</span> <span class="o">:</span> <span class="n">w_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p>同上</p>

<h2 id="decoder38_6">6.for循环1</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (decoder38_6.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_6.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_6</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">i_opt</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_opt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>    <span class="k">integer</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mh">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mh">8</span><span class="p">;</span> <span class="n">i</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mh">1</span><span class="p">)</span>
</span><span class='line'>                <span class="k">begin</span>
</span><span class='line'>                    <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">i_sel</span><span class="p">)</span>
</span><span class='line'>                        <span class="n">r_y</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">else</span>
</span><span class='line'>                        <span class="n">r_y</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mh">1</span><span class="p">;</span>
</span><span class='line'>                <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">assign</span> <span class="n">o_y</span> <span class="o">=</span> <span class="p">(</span><span class="n">i_opt</span> <span class="o">==</span> <span class="mh">1&#39;b1</span><span class="p">)</span> <span class="o">?</span> <span class="o">~</span><span class="n">r_y</span> <span class="o">:</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/38%E8%AF%91%E7%A0%81%E5%99%A8/decoder_6_rtl.png" alt="image" /></p>

<h2 id="decoder38_7">7.for循环2</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (decoder38_7.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_7.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_7</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">i_opt</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_opt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>    <span class="k">integer</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="n">r_y</span> <span class="o">=</span> <span class="mh">8&#39;hff</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mh">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mh">8</span><span class="p">;</span> <span class="n">i</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mh">1</span><span class="p">)</span>
</span><span class='line'>                <span class="k">begin</span>
</span><span class='line'>                    <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">i_sel</span><span class="p">)</span>
</span><span class='line'>                        <span class="n">r_y</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mh">0</span><span class="p">;</span>
</span><span class='line'>                <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">assign</span> <span class="n">o_y</span> <span class="o">=</span> <span class="p">(</span><span class="n">i_opt</span> <span class="o">==</span> <span class="mh">1&#39;b1</span><span class="p">)</span> <span class="o">?</span> <span class="o">~</span><span class="n">r_y</span> <span class="o">:</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p>同上</p>

<h2 id="decoder38_8">8.两行代码搞定</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (decoder38_8.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_8.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_8</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">i_opt</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_opt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">wire</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">w_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">assign</span> <span class="n">w_y</span> <span class="o">=</span> <span class="o">~</span><span class="p">(</span><span class="mh">8</span><span class="mi">&#39;d1</span> <span class="o">&lt;&lt;</span> <span class="n">i_sel</span><span class="p">);</span>
</span><span class='line'>    <span class="k">assign</span> <span class="n">o_y</span> <span class="o">=</span> <span class="p">(</span><span class="n">i_opt</span> <span class="o">==</span> <span class="mh">1&#39;b1</span><span class="p">)</span> <span class="o">?</span> <span class="o">~</span><span class="n">w_y</span> <span class="o">:</span> <span class="n">w_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/38%E8%AF%91%E7%A0%81%E5%99%A8/decoder_8_rtl.png" alt="image" /></p>

<h2 id="decoder38_9">9.一行代码搞定</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (decoder38_9.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_9.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_9</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">i_opt</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_opt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">assign</span> <span class="n">o_y</span> <span class="o">=</span> <span class="p">(</span><span class="n">i_opt</span> <span class="o">==</span> <span class="mh">1&#39;b1</span><span class="p">)</span> <span class="o">?</span> <span class="o">~</span><span class="p">(</span><span class="mh">8</span><span class="mi">&#39;d1</span> <span class="o">&lt;&lt;</span> <span class="n">i_sel</span><span class="p">)</span> <span class="o">:</span> <span class="p">(</span><span class="mh">8</span><span class="mi">&#39;d1</span> <span class="o">&lt;&lt;</span> <span class="n">i_sel</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p>同上</p>

<h2 id="decoder38_10">10.调用function</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (decoder38_10.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_10.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_10</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">i_opt</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_opt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="n">i_sel</span> <span class="k">or</span> <span class="n">i_opt</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">i_opt</span> <span class="o">==</span> <span class="mh">1&#39;b1</span><span class="p">)</span>
</span><span class='line'>                <span class="n">o_y</span> <span class="o">=</span> <span class="o">~</span><span class="n">base_decoder38</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">);</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>                <span class="n">o_y</span> <span class="o">=</span> <span class="n">base_decoder38</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">);</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">function</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">base_decoder38</span><span class="p">;</span>
</span><span class='line'>        <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="n">base_decoder38</span> <span class="o">=</span> <span class="o">~</span><span class="p">(</span><span class="mh">8</span><span class="mi">&#39;d1</span> <span class="o">&lt;&lt;</span> <span class="n">i_sel</span><span class="p">);</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">endfunction</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p>同上</p>

<h2 id="decoder38_11">11.调用task</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (decoder38_11.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_11.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_11</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">i_opt</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_opt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="n">i_sel</span> <span class="k">or</span> <span class="n">i_opt</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="n">base_decoder38</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">r_y</span><span class="p">);</span>
</span><span class='line'>            <span class="n">o_y</span> <span class="o">=</span> <span class="p">(</span><span class="n">i_opt</span> <span class="o">==</span> <span class="mh">1</span><span class="p">)</span> <span class="o">?</span> <span class="o">~</span><span class="n">r_y</span> <span class="o">:</span> <span class="n">r_y</span><span class="p">;</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">task</span> <span class="n">base_decoder38</span><span class="p">;</span>
</span><span class='line'>        <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>        <span class="k">output</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="n">o_y</span> <span class="o">=</span> <span class="o">~</span><span class="p">(</span><span class="mh">8</span><span class="mi">&#39;d1</span> <span class="o">&lt;&lt;</span> <span class="n">i_sel</span><span class="p">);</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">endtask</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p>同上</p>

<h2 id="decoder38_12">12.调用module</h2>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (decoder38_12.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_12.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_12</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">i_opt</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_opt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">wire</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">w_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">assign</span> <span class="n">o_y</span> <span class="o">=</span> <span class="p">(</span><span class="n">i_opt</span> <span class="o">==</span> <span class="mh">1&#39;b1</span><span class="p">)</span> <span class="o">?</span> <span class="o">~</span><span class="n">w_y</span> <span class="o">:</span> <span class="n">w_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">decoder38_12_base</span> <span class="n">decoder38_12_base_entity</span> <span class="p">(.</span><span class="n">i_sel</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">),</span> <span class="p">.</span><span class="n">o_y</span> <span class="p">(</span><span class="n">w_y</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span> (decoder38_12_base.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_12_base.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_12_base</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">case</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">)</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d0</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1110</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d1</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1101</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d2</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1011</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d3</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_0111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d4</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1110</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d5</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1101</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d6</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1011</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d7</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b0111</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="k">default</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>            <span class="k">endcase</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/38%E8%AF%91%E7%A0%81%E5%99%A8/decoder_12_rtl.png" alt="image" />
<img src="https://dl.dropboxusercontent.com/u/128996895/Blog/38%E8%AF%91%E7%A0%81%E5%99%A8/decoder_12_base_rtl.png" alt="image" /></p>

<h2 id="decoder38_13">13.原理图方式</h2>


<h3>原理图</h3>

<p><a href="https://dl.dropboxusercontent.com/u/128996895/Blog/38%E8%AF%91%E7%A0%81%E5%99%A8/decoder_13_bdf.png"><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/38%E8%AF%91%E7%A0%81%E5%99%A8/decoder_13_bdf.png" alt="image" /></a></p>

<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/38%E8%AF%91%E7%A0%81%E5%99%A8/decoder_13_rtl.png" alt="image" /></p>

<h2 id="decoder38_14">14.真值表描述</h2>


<p>不知道以前是在哪看到的，说Quartus支持真值表文件描述，结果到写的时侯，找了一圈，才发现Quartus没有这个功能，好在，搜索的过程中发现AHDL支持真值表描述，于是我就用AHDL写了一个，写完后突然想起来，其实Verilog也有类似的写法，于是我又用Verilog写了一个。两种语言的写法很相似，它们生成的Rtl也是一样的。可以发现，用真值表描述，电路最简。（由于<code>pygments</code>和<code>gits</code>都不支持AHDL语言，所以AHDL代码没有语法高亮。）</p>

<h3>AHDL</h3>

<figure class='code'><figcaption><span>(decoder38_14.tdf)</span><a href='http://postget.me/downloads/code/decoder38/decoder38_14.tdf'>download </a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>SUBDESIGN decoder38_14
</span><span class='line'>(
</span><span class='line'>    i_sel[2..0] : INPUT;
</span><span class='line'>    i_opt : INPUT;
</span><span class='line'>    o_y[7..0] : OUTPUT;
</span><span class='line'>)
</span><span class='line'>
</span><span class='line'>BEGIN
</span><span class='line'>    TABLE
</span><span class='line'>        i_sel[2..0], i_opt =&gt; o_y[7..0];
</span><span class='line'>        0, 0 =&gt; B&quot;11111110&quot;;
</span><span class='line'>        1, 0 =&gt; B&quot;11111101&quot;;
</span><span class='line'>        2, 0 =&gt; B&quot;11111011&quot;;
</span><span class='line'>        3, 0 =&gt; B&quot;11110111&quot;;
</span><span class='line'>        4, 0 =&gt; B&quot;11101111&quot;;
</span><span class='line'>        5, 0 =&gt; B&quot;11011111&quot;;
</span><span class='line'>        6, 0 =&gt; B&quot;10111111&quot;;
</span><span class='line'>        7, 0 =&gt; B&quot;01111111&quot;;
</span><span class='line'>        0, 1 =&gt; B&quot;00000001&quot;;
</span><span class='line'>        1, 1 =&gt; B&quot;00000010&quot;;
</span><span class='line'>        2, 1 =&gt; B&quot;00000100&quot;;
</span><span class='line'>        3, 1 =&gt; B&quot;00001000&quot;;
</span><span class='line'>        4, 1 =&gt; B&quot;00010000&quot;;
</span><span class='line'>        5, 1 =&gt; B&quot;00100000&quot;;
</span><span class='line'>        6, 1 =&gt; B&quot;01000000&quot;;
</span><span class='line'>        7, 1 =&gt; B&quot;10000000&quot;;
</span><span class='line'>    END TABLE;
</span><span class='line'>
</span><span class='line'>END;
</span></code></pre></td></tr></table></div></figure>


<h3>Verilog</h3>

<figure class='code'><figcaption><span> (decoder38_14.v)</span> <a href='http://postgetme.github.io/downloads/code/decoder38/decoder38_14.v'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='v'><span class='line'><span class="k">module</span> <span class="n">decoder38_14_2</span> <span class="p">(</span><span class="n">i_sel</span><span class="p">,</span> <span class="n">i_opt</span><span class="p">,</span> <span class="n">o_y</span><span class="p">);</span>
</span><span class='line'>    <span class="k">input</span> <span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">i_sel</span><span class="p">;</span>
</span><span class='line'>    <span class="k">input</span> <span class="n">i_opt</span><span class="p">;</span>
</span><span class='line'>    <span class="k">output</span> <span class="kt">reg</span> <span class="p">[</span><span class="mh">7</span><span class="o">:</span><span class="mh">0</span><span class="p">]</span> <span class="n">o_y</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">always</span> <span class="p">@</span> <span class="p">(</span><span class="n">i_sel</span> <span class="k">or</span> <span class="n">i_opt</span><span class="p">)</span>
</span><span class='line'>        <span class="k">begin</span>
</span><span class='line'>            <span class="k">case</span> <span class="p">({</span><span class="n">i_sel</span><span class="p">[</span><span class="mh">2</span><span class="o">:</span><span class="mh">0</span><span class="p">],</span> <span class="n">i_opt</span><span class="p">})</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d0</span><span class="p">,</span> <span class="mh">1&#39;b0</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1110</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d1</span><span class="p">,</span> <span class="mh">1&#39;b0</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1101</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d2</span><span class="p">,</span> <span class="mh">1&#39;b0</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_1011</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d3</span><span class="p">,</span> <span class="mh">1&#39;b0</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1111</span><span class="n">_0111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d4</span><span class="p">,</span> <span class="mh">1&#39;b0</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1110</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d5</span><span class="p">,</span> <span class="mh">1&#39;b0</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1101</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d6</span><span class="p">,</span> <span class="mh">1&#39;b0</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1011</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d7</span><span class="p">,</span> <span class="mh">1&#39;b0</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b0111</span><span class="n">_1111</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d0</span><span class="p">,</span> <span class="mh">1&#39;b1</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b0000</span><span class="n">_0001</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d1</span><span class="p">,</span> <span class="mh">1&#39;b1</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b0000</span><span class="n">_0010</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d2</span><span class="p">,</span> <span class="mh">1&#39;b1</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b0000</span><span class="n">_0100</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d3</span><span class="p">,</span> <span class="mh">1&#39;b1</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b0000</span><span class="n">_1000</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d4</span><span class="p">,</span> <span class="mh">1&#39;b1</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b0001</span><span class="n">_0000</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d5</span><span class="p">,</span> <span class="mh">1&#39;b1</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b0010</span><span class="n">_0000</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d6</span><span class="p">,</span> <span class="mh">1&#39;b1</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b0100</span><span class="n">_0000</span><span class="p">;</span>
</span><span class='line'>                <span class="mh">3</span><span class="mi">&#39;d7</span><span class="p">,</span> <span class="mh">1&#39;b1</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;b1000</span><span class="n">_0000</span><span class="p">;</span>
</span><span class='line'>                <span class="k">default</span><span class="o">:</span> <span class="n">o_y</span> <span class="o">=</span> <span class="mh">8&#39;hff</span><span class="p">;</span>
</span><span class='line'>            <span class="k">endcase</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">endmodule</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rtl</h3>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/38%E8%AF%91%E7%A0%81%E5%99%A8/decoder_14_rtl.png" alt="image" /></p>

<h2 id="decoder38_15">15.门级描述</h2>


<h3>Verilog</h3>

<p>太复杂，不写了。</p>

<h3>Rtl</h3>

<p>同上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mou Sample]]></title>
    <link href="http://postgetme.github.io/blog/2013/08/04/mou/"/>
    <updated>2013-08-04T02:25:00+08:00</updated>
    <id>http://postgetme.github.io/blog/2013/08/04/mou</id>
    <content type="html"><![CDATA[<h1>Mou</h1>

<p><img src="http://mouapp.com/Mou_128.png" alt="Mou icon" /></p>

<h2>Overview</h2>

<p><strong>Mou</strong>, the missing Markdown editor for <em>web developers</em>.</p>

<h3>Syntax</h3>

<h4>Strong and Emphasize</h4>

<p><strong>strong</strong> or <strong>strong</strong> ( Cmd + B )</p>

<p><em>emphasize</em> or <em>emphasize</em> ( Cmd + I )</p>

<p><strong>Sometimes I want a lot of text to be bold.
Like, seriously, a <em>LOT</em> of text</strong></p>

<h4>Blockquotes</h4>

<blockquote><p>Right angle brackets &gt; are used for block quotes.</p></blockquote>

<h4>Links and Email</h4>

<p>An email <a href="&#109;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#101;&#120;&#97;&#109;&#x70;&#108;&#101;&#64;&#x65;&#x78;&#97;&#x6d;&#112;&#108;&#x65;&#46;&#99;&#111;&#109;">&#101;&#120;&#x61;&#x6d;&#112;&#x6c;&#101;&#x40;&#x65;&#120;&#x61;&#109;&#112;&#x6c;&#101;&#46;&#99;&#111;&#109;</a> link.</p>

<p>Simple inline link <a href="http://chenluois.com">http://chenluois.com</a>, another inline link <a href="http://smallerapp.com">Smaller</a>, one more inline link with title <a href="http://resizesafari.com" title="a Safari extension">Resize</a>.</p>

<p>A <a href="http://mouapp.com" title="Markdown editor on Mac OS X">reference style</a> link. Input id, then anywhere in the doc, define the link with corresponding id:</p>

<p>Titles ( or called tool tips ) in the links are optional.</p>

<h4>Images</h4>

<p>An inline image <img src="http://smallerapp.com/favicon.ico" title="Title here" alt="Smaller icon" />, title is optional.</p>

<p>A <img src="http://resizesafari.com/favicon.ico" title="Title" alt="Resize icon" /> reference style image.</p>

<h4>Inline code and Block code</h4>

<p>Inline code are surround by <code>backtick</code> key. To create a block code:</p>

<pre><code>Indent each line by at least 1 tab, or 4 spaces.
var Mou = exactlyTheAppIwant; 
</code></pre>

<h4>Ordered Lists</h4>

<p>Ordered lists are created using &ldquo;1.&rdquo; + Space:</p>

<ol>
<li>Ordered list item</li>
<li>Ordered list item</li>
<li>Ordered list item</li>
</ol>


<h4>Unordered Lists</h4>

<p>Unordered list are created using &ldquo;*&rdquo; + Space:</p>

<ul>
<li>Unordered list item</li>
<li>Unordered list item</li>
<li>Unordered list item</li>
</ul>


<p>Or using &ldquo;&ndash;&rdquo; + Space:</p>

<ul>
<li>Unordered list item</li>
<li>Unordered list item</li>
<li>Unordered list item</li>
</ul>


<h4>Hard Linebreak</h4>

<p>End a line with two or more spaces will create a hard linebreak, called <code>&lt;br /&gt;</code> in HTML. ( Control + Return )<br/>
Above line ended with 2 spaces.</p>

<h4>Horizontal Rules</h4>

<p>Three or more asterisks or dashes:</p>

<hr />

<hr />

<hr />

<h4>Headers</h4>

<p>Setext-style:</p>

<h1>This is H1</h1>

<h2>This is H2</h2>

<p>atx-style:</p>

<h1>This is H1</h1>

<h2>This is H2</h2>

<h3>This is H3</h3>

<h4>This is H4</h4>

<h5>This is H5</h5>

<h6>This is H6</h6>

<h3>Extra Syntax</h3>

<h4>Footnotes</h4>

<p>Footnotes work mostly like reference-style links. A footnote is made of two things: a marker in the text that will become a superscript number; a footnote definition that will be placed in a list of footnotes at the end of the document. A footnote looks like this:</p>

<p>That&rsquo;s some text with a footnote.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<h4>Strikethrough</h4>

<p>Wrap with 2 tilde characters:</p>

<p><del>Strikethrough</del></p>

<h4>Fenced Code Blocks</h4>

<p>Start with a line containing 3 or more backticks, and ends with the first line with the same number of backticks:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Fenced code blocks are like Stardard Markdown’s regular code
</span><span class='line'>blocks, except that they’re not indented and instead rely on
</span><span class='line'>a start and end fence lines to delimit the code block.</span></code></pre></td></tr></table></div></figure>


<h4>Tables</h4>

<p>A simple table looks like this:</p>

<table>
<thead>
<tr>
<th>First Header </th>
<th> Second Header </th>
<th> Third Header</th>
</tr>
</thead>
<tbody>
<tr>
<td>Content Cell </td>
<td> Content Cell  </td>
<td> Content Cell</td>
</tr>
<tr>
<td>Content Cell </td>
<td> Content Cell  </td>
<td> Content Cell</td>
</tr>
</tbody>
</table>


<p>If you wish, you can add a leading and tailing pipe to each line of the table:</p>

<table>
<thead>
<tr>
<th></th>
<th> First Header </th>
<th> Second Header </th>
<th> Third Header </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> Content Cell </td>
<td> Content Cell  </td>
<td> Content Cell |</td>
</tr>
<tr>
<td></td>
<td> Content Cell </td>
<td> Content Cell  </td>
<td> Content Cell |</td>
</tr>
</tbody>
</table>


<p>Specify alignement for each column by adding colons to separator lines:</p>

<table>
<thead>
<tr>
<th align="left">First Header </th>
<th align="center"> Second Header </th>
<th align="right"> Third Header</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">Left         </td>
<td align="center"> Center        </td>
<td align="right"> Right</td>
</tr>
<tr>
<td align="left">Left         </td>
<td align="center"> Center        </td>
<td align="right"> Right</td>
</tr>
</tbody>
</table>


<h3>Shortcuts</h3>

<h4>View</h4>

<ul>
<li>Toggle live preview: Shift + Cmd + I</li>
<li>Toggle Words Counter: Shift + Cmd + W</li>
<li>Toggle Transparent: Shift + Cmd + T</li>
<li>Toggle Floating: Shift + Cmd + F</li>
<li>Left/Right = 1/1: Cmd + 0</li>
<li>Left/Right = 3/1: Cmd + +</li>
<li>Left/Right = 1/3: Cmd + &ndash;</li>
<li>Toggle Writing orientation: Cmd + L</li>
<li>Toggle fullscreen: Control + Cmd + F</li>
</ul>


<h4>Actions</h4>

<ul>
<li>Copy HTML: Option + Cmd + C</li>
<li>Strong: Select text, Cmd + B</li>
<li>Emphasize: Select text, Cmd + I</li>
<li>Inline Code: Select text, Cmd + K</li>
<li>Strikethrough: Select text, Cmd + U</li>
<li>Link: Select text, Control + Shift + L</li>
<li>Image: Select text, Control + Shift + I</li>
<li>Select Word: Control + Option + W</li>
<li>Select Line: Shift + Cmd + L</li>
<li>Select All: Cmd + A</li>
<li>Deselect All: Cmd + D</li>
<li>Convert to Uppercase: Select text, Control + U</li>
<li>Convert to Lowercase: Select text, Control + Shift + U</li>
<li>Convert to Titlecase: Select text, Control + Option + U</li>
<li>Convert to List: Select lines, Control + L</li>
<li>Convert to Blockquote: Select lines, Control + Q</li>
<li>Convert to H1: Cmd + 1</li>
<li>Convert to H2: Cmd + 2</li>
<li>Convert to H3: Cmd + 3</li>
<li>Convert to H4: Cmd + 4</li>
<li>Convert to H5: Cmd + 5</li>
<li>Convert to H6: Cmd + 6</li>
<li>Convert Spaces to Tabs: Control + [</li>
<li>Convert Tabs to Spaces: Control + ]</li>
<li>Insert Current Date: Control + Shift + 1</li>
<li>Insert Current Time: Control + Shift + 2</li>
<li>Insert entity &lt;: Control + Shift + ,</li>
<li>Insert entity >: Control + Shift + .</li>
<li>Insert entity &amp;: Control + Shift + 7</li>
<li>Insert entity Space: Control + Shift + Space</li>
<li>Insert Scriptogr.am Header: Control + Shift + G</li>
<li>Shift Line Left: Select lines, Cmd + [</li>
<li>Shift Line Right: Select lines, Cmd + ]</li>
<li>New Line: Cmd + Return</li>
<li>Comment: Cmd + /</li>
<li>Hard Linebreak: Control + Return</li>
</ul>


<h4>Edit</h4>

<ul>
<li>Auto complete current word: Esc</li>
<li>Find: Cmd + F</li>
<li>Close find bar: Esc</li>
</ul>


<h4>Post</h4>

<ul>
<li>Post on Scriptogr.am: Control + Shift + S</li>
<li>Post on Tumblr: Control + Shift + T</li>
</ul>


<h4>Export</h4>

<ul>
<li>Export HTML: Option + Cmd + E</li>
<li>Export PDF:  Option + Cmd + P</li>
</ul>


<h3>And more?</h3>

<p>Don&rsquo;t forget to check Preferences, lots of useful options are there.</p>

<p>Follow <a href="http://twitter.com/chenluois">@chenluois</a> on Twitter for the latest news.</p>

<p>For feedback, use the menu <code>Help</code> &ndash; <code>Send Feedback</code></p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>And that&rsquo;s the footnote.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>

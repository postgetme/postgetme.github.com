<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: verilog | postget]]></title>
  <link href="http://postgetme.github.io/blog/categories/verilog/atom.xml" rel="self"/>
  <link href="http://postgetme.github.io/"/>
  <updated>2013-08-04T00:48:37+08:00</updated>
  <id>http://postgetme.github.io/</id>
  <author>
    <name><![CDATA[JasonLin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[my first article]]></title>
    <link href="http://postgetme.github.io/blog/2013/07/31/my-first-article/"/>
    <updated>2013-07-31T23:31:00+08:00</updated>
    <id>http://postgetme.github.io/blog/2013/07/31/my-first-article</id>
    <content type="html"><![CDATA[<h1>RTL</h1>

<p><img src="https://dl.dropboxusercontent.com/u/128996895/Blog/38%E8%AF%91%E7%A0%81%E5%99%A8%E7%9A%84%E5%87%A0%E7%A7%8D%E5%86%99%E6%B3%95/decoder38_1.png" alt="RTL" /></p>

<h1>Verilog</h1>

<p>``` JS decoder38.v
module decoder38 (i_sel, i_opt, o_y);</p>

<pre><code>input [2:0] i_sel;
input i_opt;
output reg [7:0] o_y;
reg [7:0] r_y;

always @ (i_sel or i_opt)
    begin
        case (i_sel)
            3'd0: r_y = 8'b1111_1110;   //十进制表示法，二进制数可以用'_'分隔
            3'd1: r_y = 8'b1111_1101;
            3'd2: r_y = 8'b1111_1011;
            3'd3: r_y = 8'b1111_0111;
            3'd4: r_y = 8'b1110_1111;
            3'd5: r_y = 8'b1101_1111;
            3'd6: r_y = 8'b1011_1111;
            3'd7: r_y = 8'b0111_1111;
            default: r_y = 8'hff;   //十六进制表示法
        endcase

        if (i_opt == 1)
            o_y = ~r_y;
        else
            o_y = r_y;
    end
</code></pre>

<p>endmodule
```</p>
]]></content>
  </entry>
  
</feed>
